{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"easy-auth-info \u00b6 SYNOPSIS \u00b6 easy-auth-info run-service # Runs the program as a service easy-auth-info <item-id> # Retrieves the information from the cache or directly from the bag-store DESCRIPTION \u00b6 Provides consolidated authorization info about items in a bag store. ARGUMENTS \u00b6 -h, --help Show help message -v, --version Show version of this program trailing arguments: path (not required) Subcommand: run-service - Starts EASY Auth Info as a daemon that services HTTP requests -h, --help Show help message --- HTTP service \u00b6 When started with the sub-command run-service a REST API becomes available with HTTP method GET only. In a path pattern * refers to any completion of the path, placeholders for variables start with a colon, and optional parts are enclosed in square brackets. Method Path Action GET / Return a simple message to indicate that the service is up: \"EASY Auth Info Service running...\" GET /:uuid/* Return the rights for the file from the bag with bag-id :uuid and bag local path * EXAMPLES \u00b6 easy-auth-info 40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml curl 'http://localhost:20170/40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml' { \"itemId\" : \"40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml\" , \"owner\" : \"someone\" , \"dateAvailable\" : \"1992-07-30\" , \"accessibleTo\" : \"KNOWN\" , \"visibleTo\" : \"KNOWN\" } INSTALLATION AND CONFIGURATION \u00b6 Depending on services \u00b6 easy-bag-store Steps \u00b6 Unzip the tarball to a directory of your choice, typically /usr/local/ A new directory called easy-auth-info- will be created Add the command script to your PATH environment variable by creating a symbolic link to it from a directory that is on the path, e.g. ln -s /usr/local/easy-auth-info-<version>/bin/easy-auth-info /usr/bin General configuration settings can be set in cfg/application.properties and logging can be configured in cfg/logback.xml . The available settings are explained in comments in aforementioned files. Security advice \u00b6 Keep everything behind the firewall. Services like download and search will need access to the main servlet implementing the GET methods. Only emergency fixes will need access to the update servlet implementing the DELETE methods. Unintentional deletes won't hurt functionality but might have a performance penalty. Performance advice \u00b6 Keeping the default solr.url and solr.core in the application.properties while not having the solr core up and running, will slow down the service even more than omitting the properties as it will try to read and update each request in the solr cache. BUILDING FROM SOURCE \u00b6 Prerequisites: Java 8 or higher Maven 3.3.3 or higher Steps: git clone https://github.com/DANS-KNAW/easy-auth-info.git cd easy-auth-info mvn install","title":"Manual"},{"location":"#easy-auth-info","text":"","title":"easy-auth-info"},{"location":"#synopsis","text":"easy-auth-info run-service # Runs the program as a service easy-auth-info <item-id> # Retrieves the information from the cache or directly from the bag-store","title":"SYNOPSIS"},{"location":"#description","text":"Provides consolidated authorization info about items in a bag store.","title":"DESCRIPTION"},{"location":"#arguments","text":"-h, --help Show help message -v, --version Show version of this program trailing arguments: path (not required) Subcommand: run-service - Starts EASY Auth Info as a daemon that services HTTP requests -h, --help Show help message ---","title":"ARGUMENTS"},{"location":"#http-service","text":"When started with the sub-command run-service a REST API becomes available with HTTP method GET only. In a path pattern * refers to any completion of the path, placeholders for variables start with a colon, and optional parts are enclosed in square brackets. Method Path Action GET / Return a simple message to indicate that the service is up: \"EASY Auth Info Service running...\" GET /:uuid/* Return the rights for the file from the bag with bag-id :uuid and bag local path *","title":"HTTP service"},{"location":"#examples","text":"easy-auth-info 40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml curl 'http://localhost:20170/40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml' { \"itemId\" : \"40594b6d-8378-4260-b96b-13b57beadf7c/data/pakbon.xml\" , \"owner\" : \"someone\" , \"dateAvailable\" : \"1992-07-30\" , \"accessibleTo\" : \"KNOWN\" , \"visibleTo\" : \"KNOWN\" }","title":"EXAMPLES"},{"location":"#installation-and-configuration","text":"","title":"INSTALLATION AND CONFIGURATION"},{"location":"#depending-on-services","text":"easy-bag-store","title":"Depending on services"},{"location":"#steps","text":"Unzip the tarball to a directory of your choice, typically /usr/local/ A new directory called easy-auth-info- will be created Add the command script to your PATH environment variable by creating a symbolic link to it from a directory that is on the path, e.g. ln -s /usr/local/easy-auth-info-<version>/bin/easy-auth-info /usr/bin General configuration settings can be set in cfg/application.properties and logging can be configured in cfg/logback.xml . The available settings are explained in comments in aforementioned files.","title":"Steps"},{"location":"#security-advice","text":"Keep everything behind the firewall. Services like download and search will need access to the main servlet implementing the GET methods. Only emergency fixes will need access to the update servlet implementing the DELETE methods. Unintentional deletes won't hurt functionality but might have a performance penalty.","title":"Security advice"},{"location":"#performance-advice","text":"Keeping the default solr.url and solr.core in the application.properties while not having the solr core up and running, will slow down the service even more than omitting the properties as it will try to read and update each request in the solr cache.","title":"Performance advice"},{"location":"#building-from-source","text":"Prerequisites: Java 8 or higher Maven 3.3.3 or higher Steps: git clone https://github.com/DANS-KNAW/easy-auth-info.git cd easy-auth-info mvn install","title":"BUILDING FROM SOURCE"},{"location":"to-api/","text":"The API is documented using the OpenAPI standard. The API definition files can be downloaded from docs/api/ or viewed in Swagger UI in a new tab .","title":"HTTP API"}]}